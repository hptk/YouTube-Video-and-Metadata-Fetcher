The ISO DASH implementation and the YT DASH implementation differs as mentioned before, and the most significant difference is how YT only provides one Period object in the MPD. Instead of accessing different files for all the segments of the media, the YT DASH implementation uses byte ranges within files. One big consequence of this is that the client has to keep track of what byte ranges to request from a representation (quality) in order to playback properly. When switching from one quality to another, the client must calculate the exact byte at which the next frame of the video begins in a file with a different resolution and frame/bit rate. This is not neccesarily very complex, but it is definitely more complex than just requesting a file directly out of the MPD.
It's reasonable to assume that YT has done research and testing before they decided doing it this way. When looking at the implementation it becomes apparent that YT wants to minimize the load on their servers. YTs implementation implies that the MPDs are smaller as they contain only a few URLs, but more importantly file administration and cachingis more efficient when dealing with a single file rather than hundreds or thousands of individual files//NEEDSOURCE. A single file will also consume at worst the same disk space as the file would if split, and on average consumes less, due to less consumption by inodes and directory indices.
